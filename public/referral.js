// –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
let tg = null;
try {
    tg = window.Telegram.WebApp;
    if (tg && tg.initData) {
        tg.ready();
        tg.expand();
        document.body.classList.add('tg-app');
        console.log('Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö');
    } else {
        console.log('Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    }
} catch (error) {
    console.log('Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω:', error);
}

// –î–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
let referralData = {
    referralCode: '',
    totalReferrals: 0,
    totalEarned: 0,
    pendingRewards: 0,
    referrals: [],
    rewardsHistory: []
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function loadReferralData() {
    const saved = localStorage.getItem('magnumReferralData');
    if (saved) {
        referralData = JSON.parse(saved);
    } else {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        referralData.referralCode = generateReferralCode();
    }
    
    updateReferralUI();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function saveReferralData() {
    localStorage.setItem('magnumReferralData', JSON.stringify(referralData));
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
function generateReferralCode() {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let result = '';
    for (let i = 0; i < 8; i++) {
        result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return result;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function updateReferralUI() {
    updateReferralStats();
    updateReferralLink();
    updateReferralsList();
    updateRewardsHistory();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function updateReferralStats() {
    const totalReferrals = document.getElementById('totalReferrals');
    const totalEarned = document.getElementById('totalEarned');
    const pendingRewards = document.getElementById('pendingRewards');
    
    if (totalReferrals) {
        totalReferrals.textContent = referralData.totalReferrals;
    }
    
    if (totalEarned) {
        totalEarned.textContent = formatNumber(referralData.totalEarned);
    }
    
    if (pendingRewards) {
        pendingRewards.textContent = formatNumber(referralData.pendingRewards);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function updateReferralLink() {
    const referralLink = document.getElementById('referralLink');
    if (referralLink) {
        const baseUrl = window.location.origin;
        const fullLink = `${baseUrl}?ref=${referralData.referralCode}`;
        referralLink.value = fullLink;
    }
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function copyReferralLink() {
    const referralLink = document.getElementById('referralLink');
    if (referralLink) {
        referralLink.select();
        referralLink.setSelectionRange(0, 99999);
        
        try {
            document.execCommand('copy');
            
            if (tg && tg.showAlert) {
                tg.showAlert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            } else {
                alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            }
        } catch (err) {
            console.log('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
        }
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
function shareToTelegram() {
    const referralLink = document.getElementById('referralLink');
    if (referralLink) {
        const text = `üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Magnum Coins Farm!\n\nüí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã, —Å–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n\nüîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink.value}`;
        
        const url = `https://t.me/share/url?url=${encodeURIComponent(referralLink.value)}&text=${encodeURIComponent(text)}`;
        
        if (tg && tg.openTelegramLink) {
            tg.openTelegramLink(url);
        } else {
            window.open(url, '_blank');
        }
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ WhatsApp
function shareToWhatsApp() {
    const referralLink = document.getElementById('referralLink');
    if (referralLink) {
        const text = `üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Magnum Coins Farm!\n\nüí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã, —Å–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n\nüîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink.value}`;
        
        const url = `https://wa.me/?text=${encodeURIComponent(text)}`;
        window.open(url, '_blank');
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ VK
function shareToVK() {
    const referralLink = document.getElementById('referralLink');
    if (referralLink) {
        const text = `üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Magnum Coins Farm!\n\nüí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –º–æ–Ω–µ—Ç—ã, —Å–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n\nüîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${referralLink.value}`;
        
        const url = `https://vk.com/share.php?url=${encodeURIComponent(referralLink.value)}&title=Magnum Coins Farm&description=${encodeURIComponent(text)}`;
        window.open(url, '_blank');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function updateReferralsList() {
    const referralsList = document.getElementById('referralsList');
    if (!referralsList) return;
    
    referralsList.innerHTML = '';
    
    if (referralData.referrals.length === 0) {
        const emptyMessage = document.createElement('div');
        emptyMessage.style.textAlign = 'center';
        emptyMessage.style.color = 'rgba(255, 255, 255, 0.6)';
        emptyMessage.style.padding = '20px';
        emptyMessage.innerHTML = `
            <div style="font-size: 3rem; margin-bottom: 10px;">üë•</div>
            <div>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
            <div style="font-size: 0.9rem; margin-top: 5px;">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏!</div>
        `;
        referralsList.appendChild(emptyMessage);
        return;
    }
    
    referralData.referrals.forEach(referral => {
        const referralItem = document.createElement('div');
        referralItem.className = 'referral-item';
        
        const date = new Date(referral.date);
        const formattedDate = date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
        
        referralItem.innerHTML = `
            <div class="referral-info">
                <div class="referral-name">${referral.name}</div>
                <div class="referral-date">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è ${formattedDate}</div>
            </div>
            <div class="referral-stats">
                <div class="referral-level">–£—Ä–æ–≤–µ–Ω—å ${referral.level}</div>
                <div class="referral-earnings">+${formatNumber(referral.earnings)} –º–æ–Ω–µ—Ç</div>
            </div>
        `;
        
        referralsList.appendChild(referralItem);
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≥—Ä–∞–¥
function updateRewardsHistory() {
    const rewardsHistory = document.getElementById('rewardsHistory');
    if (!rewardsHistory) return;
    
    rewardsHistory.innerHTML = '';
    
    if (referralData.rewardsHistory.length === 0) {
        const emptyMessage = document.createElement('div');
        emptyMessage.style.textAlign = 'center';
        emptyMessage.style.color = 'rgba(255, 255, 255, 0.6)';
        emptyMessage.style.padding = '20px';
        emptyMessage.innerHTML = `
            <div style="font-size: 3rem; margin-bottom: 10px;">üéÅ</div>
            <div>–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≥—Ä–∞–¥ –ø—É—Å—Ç–∞</div>
            <div style="font-size: 0.9rem; margin-top: 5px;">–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥!</div>
        `;
        rewardsHistory.appendChild(emptyMessage);
        return;
    }
    
    referralData.rewardsHistory.slice(0, 10).forEach(reward => {
        const historyItem = document.createElement('div');
        historyItem.className = 'history-item';
        
        const date = new Date(reward.date);
        const formattedDate = date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
        
        historyItem.innerHTML = `
            <div class="history-date">${formattedDate}</div>
            <div class="history-amount">+${formatNumber(reward.amount)}</div>
            <div class="history-type">${reward.type}</div>
        `;
        
        rewardsHistory.appendChild(historyItem);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
function addReferral(referralInfo) {
    referralData.referrals.unshift({
        id: Date.now(),
        name: referralInfo.name || '–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫',
        date: new Date().toISOString(),
        level: 1,
        earnings: 0
    });
    
    referralData.totalReferrals++;
    
    // –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    const baseReward = 100;
    const reward = baseReward;
    
    referralData.totalEarned += reward;
    referralData.pendingRewards += reward;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≥—Ä–∞–¥
    referralData.rewardsHistory.unshift({
        date: new Date().toISOString(),
        amount: reward,
        type: '–†–µ—Ñ–µ—Ä–∞–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è'
    });
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    if (referralData.rewardsHistory.length > 50) {
        referralData.rewardsHistory = referralData.rewardsHistory.slice(0, 50);
    }
    
    saveReferralData();
    updateReferralUI();
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (tg && tg.showAlert) {
        tg.showAlert(`üéâ –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª!\n–ü–æ–ª—É—á–µ–Ω–æ ${reward} –º–æ–Ω–µ—Ç`);
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
function claimReferralRewards() {
    if (referralData.pendingRewards > 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–µ—Ç—ã –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–µ
        const gameData = JSON.parse(localStorage.getItem('magnumGameData') || '{}');
        gameData.coins = (gameData.coins || 0) + referralData.pendingRewards;
        localStorage.setItem('magnumGameData', JSON.stringify(gameData));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≥—Ä–∞–¥
        referralData.rewardsHistory.unshift({
            date: new Date().toISOString(),
            amount: referralData.pendingRewards,
            type: '–ü–æ–ª—É—á–µ–Ω—ã –Ω–∞–≥—Ä–∞–¥—ã'
        });
        
        const claimedAmount = referralData.pendingRewards;
        referralData.pendingRewards = 0;
        
        saveReferralData();
        updateReferralUI();
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (tg && tg.showAlert) {
            tg.showAlert(`üí∞ –ü–æ–ª—É—á–µ–Ω–æ ${formatNumber(claimedAmount)} –º–æ–Ω–µ—Ç —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!`);
        }
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
function updateReferralEarnings(referralId, earnings) {
    const referral = referralData.referrals.find(r => r.id === referralId);
    if (referral) {
        const oldEarnings = referral.earnings;
        referral.earnings = earnings;
        
        // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–º–∏—Å—Å–∏—é (10% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞)
        const commission = Math.floor(earnings * 0.1);
        const additionalReward = commission - Math.floor(oldEarnings * 0.1);
        
        if (additionalReward > 0) {
            referralData.totalEarned += additionalReward;
            referralData.pendingRewards += additionalReward;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≥—Ä–∞–¥
            referralData.rewardsHistory.unshift({
                date: new Date().toISOString(),
                amount: additionalReward,
                type: '–ö–æ–º–∏—Å—Å–∏—è —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞'
            });
            
            saveReferralData();
            updateReferralUI();
        }
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function checkReferralCode() {
    const urlParams = new URLSearchParams(window.location.search);
    const refCode = urlParams.get('ref');
    
    if (refCode && refCode !== referralData.referralCode) {
        // –≠—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
        const referrerData = JSON.parse(localStorage.getItem('magnumReferralData') || '{}');
        
        if (referrerData.referralCode === refCode) {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∫ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
            const userInfo = {
                name: '–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫',
                level: 1
            };
            
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            console.log('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞–π–¥–µ–Ω:', refCode);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if (tg && tg.showAlert) {
                tg.showAlert('üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!');
            }
        }
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª
function formatNumber(num) {
    if (num >= 1000000) {
        return (num / 1000000).toFixed(1) + 'M';
    } else if (num >= 1000) {
        return (num / 1000).toFixed(1) + 'K';
    }
    return num.toString();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    loadReferralData();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
    checkReferralCode();
    
    console.log('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.copyReferralLink = copyReferralLink;
window.shareToTelegram = shareToTelegram;
window.shareToWhatsApp = shareToWhatsApp;
window.shareToVK = shareToVK;
window.addReferral = addReferral;
window.claimReferralRewards = claimReferralRewards;
